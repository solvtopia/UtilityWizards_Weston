Imports UtilityWizards.CommonCore.Common
Imports UtilityWizards.CommonCore.Shared.Common
Imports Telerik.Web.UI

Public Class Search
    Inherits builderPage

#Region "Properties"

    Private ReadOnly Property ModId As Integer
        Get
            Return Request.QueryString("modid").ToInteger
        End Get
    End Property
    Private ReadOnly Property CustAcctNum As String
        Get
            Return Request.QueryString("custacctnum")
        End Get
    End Property
    Private ReadOnly Property FilterID As Integer
        Get
            Return Request.QueryString("id").ToInteger
        End Get
    End Property
    Private ReadOnly Property Assignments As Boolean
        Get
            Return Request.QueryString("Assignments").ToBoolean
        End Get
    End Property
    Private ReadOnly Property ShowCompleted As Boolean
        Get
            Return Request.QueryString("showcompleted").ToBoolean
        End Get
    End Property

#End Region

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Not IsPostBack Then
            Me.Master.TitleText = GetFolderName(App.ActiveFolderID) & " > " & App.ActiveModule.Name & " Module"

            'Me.RadSearchGrid.AutoGenerateDeleteColumn = (App.CurrentUser.IsAdminUser Or App.CurrentUser.IsSysAdmin)

            ' if we are passed a show completed flag then automatically check the box
            Me.chkShowCompleted.Checked = Me.ShowCompleted

            If Me.OnPhone Then
                Me.RadSearchGrid.Visible = False
                Me.RadSearchGridMobile.Visible = True
                Me.LoadMobileData()
                Me.chkShowCompleted.Visible = False
            Else
                Me.RadSearchGrid.Visible = True
                Me.RadSearchGridMobile.Visible = False
                Me.chkShowCompleted.Visible = True
            End If

            ' generic work orders for wadesboro come straight here
            Me.btnNewWorkOrder.Visible = (App.ActiveModule.ID = 108)
        End If
    End Sub

    Private Sub LoadMobileData()
        If (App.CurrentUser.Permissions = Enums.SystemUserPermissions.Administrator Or
            App.CurrentUser.Permissions = Enums.SystemUserPermissions.Supervisor Or
            App.CurrentUser.Permissions = Enums.SystemUserPermissions.SystemAdministrator) Then

            Me.SqlDataSource1.SelectCommand = "SELECT * FROM [vwMobileWorkOrders] WHERE ([SupervisorID] = " & App.CurrentUser.ID & " AND [xModuleID] = " & Me.ModId & ")"
        Else Me.SqlDataSource1.SelectCommand = "SELECT * FROM [vwMobileWorkOrders] WHERE ([AssignedToID] = " & App.CurrentUser.ID & " AND [xModuleID] = " & Me.ModId & ")"
        End If

        Me.SqlDataSource1.SelectCommand = "SELECT * FROM [vwMobileWorkOrders] WHERE [xModuleID] = " & Me.ModId & ""
    End Sub

    Private Function LoadSearchFields() As String
        Dim retVal As String = ""

        '' add the folder search fields
        'If App.ActiveModule.FolderID > 0 Then
        '    Dim folderName As String = GetFolderName(App.ActiveModule.FolderID)

        '    For Each q As SystemQuestion In App.RootFolderQuestions
        '        If q.SearchField Then
        '            If retVal = "" Then
        '                retVal = "ISNULL(xmlData.value('(/Data/" & folderName & "/" & q.DataFieldName & "/text())[1]', 'varchar(255)'), '') AS [" & q.DisplayText & "]"
        '            Else retVal &= ", ISNULL(xmlData.value('(/Data/" & folderName & "/" & q.DataFieldName & "/text())[1]', 'varchar(255)'), '') AS [" & q.DisplayText & "]"
        '            End If
        '        End If
        '    Next
        'End If

        '' add the module search fields
        'For Each q As SystemQuestion In App.ActiveModuleQuestions
        '    If q.SearchField Then
        '        If retVal = "" Then
        '            retVal = "ISNULL(xmlData.value('(/Data/" & q.DataFieldName & "/text())[1]', 'varchar(255)'), '') AS [" & q.DisplayText & "]"
        '        Else retVal &= ", ISNULL(xmlData.value('(/Data/" & q.DataFieldName & "/text())[1]', 'varchar(255)'), '') AS [" & q.DisplayText & "]"
        '        End If
        '    End If
        'Next

        Return retVal
    End Function

    Private Sub RadSearchGrid_EditCommand(sender As Object, e As GridCommandEventArgs) Handles RadSearchGrid.EditCommand
        e.Canceled = True

        Dim modId As Integer = Me.ModId
        If modId = 0 Then modId = e.Item.Cells(8).Text.ToInteger
        App.ActiveModule = New SystemModule(modId)
        App.ActiveFolderID = App.ActiveModule.FolderID

        Response.Redirect("~/account/Module.aspx?modid=" & Me.ModId & "&id=" & e.Item.Cells(3).Text & "&custacctnum=" & e.Item.Cells(4).Text, False)
    End Sub

    Private Sub RadSearchGrid_DeleteCommand(sender As Object, e As GridCommandEventArgs) Handles RadSearchGrid.DeleteCommand
        e.Canceled = True
    End Sub

    Private Sub RadSearchGrid_NeedDataSource(sender As Object, e As GridNeedDataSourceEventArgs) Handles RadSearchGrid.NeedDataSource
        Dim cn As New SqlClient.SqlConnection(ConnectionString)

        Try
            Me.RadSearchGrid.Visible = True

            Dim cmd As New SqlClient.SqlCommand("procSearchGrid", cn)
            If cmd.Connection.State = ConnectionState.Closed Then cmd.Connection.Open()
            cmd.CommandType = CommandType.StoredProcedure
            cmd.Parameters.AddWithValue("@fields", Me.LoadSearchFields)
            cmd.Parameters.AddWithValue("@clientID", App.CurrentClient.ID)
            cmd.Parameters.AddWithValue("@moduleID", Me.ModId)
            cmd.Parameters.AddWithValue("@CustAcctNum", Me.CustAcctNum)
            cmd.Parameters.AddWithValue("@id", Me.FilterID)
            cmd.Parameters.AddWithValue("@showAll", Me.chkShowCompleted.Checked)

            Dim rs As SqlClient.SqlDataReader = cmd.ExecuteReader

            Me.RadSearchGrid.DataSource = rs

        Catch ex As Exception
            ex.WriteToErrorLog(New ErrorLogEntry(App.CurrentUser.ID, App.CurrentClient.ID, Enums.ProjectName.Builder))
        Finally
            'cn.Close()
        End Try
    End Sub

    Private Sub RadSearchGrid_ItemCreated(sender As Object, e As GridItemEventArgs) Handles RadSearchGrid.ItemCreated
        If TypeOf e.Item Is GridDataItem Then
            AddHandler e.Item.PreRender, AddressOf RadSearchGrid_ItemPreRender
        End If
    End Sub

    Protected Sub RadSearchGrid_ItemPreRender(ByVal sender As Object, ByVal e As EventArgs)
        ' this event fires when the user checks a box or expands a category
        Dim itm As GridItem = CType(sender, GridDataItem)

        ' change priority to red if emergency
        If itm.Cells(5).Text.ToLower = Enums.SystemModulePriority.Emergency.ToString.ToLower Then
            itm.Cells(5).Text = "<span style='color:#FFFFFF;'>" & itm.Cells(5).Text & "</span>"
        ElseIf itm.Cells(5).Text.ToLower = Enums.SystemModulePriority.Emergency.ToString.ToLower Then
            'itm.Cells(5).Text = "<span style='color:#FF6600;'>" & itm.Cells(5).Text & "</span>"
        End If

        ' change out the enum value from status to the text
        itm.Cells(6).Text = CType(itm.Cells(6).Text.ToInteger, Enums.SystemModuleStatus).ToString
        itm.Cells(7).Text = GetModuleName(itm.Cells(7).Text.ToInteger)
    End Sub

    Private Sub RadSearchGrid_ItemDataBound(sender As Object, e As GridItemEventArgs) Handles RadSearchGrid.ItemDataBound
        Try
            If TypeOf e.Item Is GridItem Then
                Dim dataItem As GridItem = e.Item
                If dataItem.Cells(5).Text.ToLower = Enums.SystemModulePriority.Emergency.ToString.ToLower Then
                    dataItem.BackColor = GetColor("#CC0000")
                ElseIf dataItem.Cells(5).Text.ToLower = Enums.SystemModulePriority.High.ToString.ToLower Then
                    dataItem.BackColor = GetColor("#FF6600")
                End If
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub RadSearchGridMobile_SelectedIndexChanged(sender As Object, e As EventArgs) Handles RadSearchGridMobile.SelectedIndexChanged
        Dim dataItem As GridItem = RadSearchGridMobile.SelectedItems(0)
        App.ActiveFolderID = dataItem.Cells(6).Text.ToInteger
        App.ActiveModule = New SystemModule(dataItem.Cells(5).Text.ToInteger)
        App.Mobile_SupervisorID = dataItem.Cells(7).Text.ToInteger
        App.Mobile_TechnicianID = dataItem.Cells(8).Text.ToInteger
        Response.Redirect("~/account/Module.aspx?modid=" & Me.ModId & "&id=" & dataItem.Cells(4).Text & "&custacctnum=" & dataItem.Cells(9).Text & "&assignments=" & Me.Assignments, False)
    End Sub

    Private Sub RadSearchGridMobile_ItemDataBound(sender As Object, e As GridItemEventArgs) Handles RadSearchGridMobile.ItemDataBound
        Try
            If TypeOf e.Item Is GridItem Then
                Dim dataItem As GridItem = e.Item
                If IsNumeric(dataItem.Cells(3).Text) Then
                    If dataItem.Cells(3).Text = CStr(Enums.SystemModulePriority.Emergency) Then
                        dataItem.BackColor = GetColor("#EF4444")
                    Else dataItem.BackColor = GetColor("#27AAD0")
                    End If
                End If
            End If
        Catch ex As Exception
        End Try
    End Sub

    Private Sub lnkNew_Click(sender As Object, e As EventArgs) Handles lnkNew.Click
        Response.Redirect("~/account/ModuleLandingPage.aspx?t=" & CStr(Enums.TransactionType.[New]) & "&modid=" & Me.ModId, False)
    End Sub

    Private Sub chkShowCompleted_CheckedChanged(sender As Object, e As EventArgs) Handles chkShowCompleted.CheckedChanged
        Me.RadSearchGrid.Rebind()
    End Sub

    Private Sub btnNewWorkOrder_Click(sender As Object, e As EventArgs) Handles btnNewWorkOrder.Click
        Response.Redirect("~/account/Module.aspx?modid=" & Me.ModId & "&custacctnum=&locationnum=", False)
    End Sub
End Class